{"version":3,"sources":["helpers/validateInput.js","redux/modules/rate.js","redux/modules/exchange.js","redux/modules/index.js","components/Container.js","colors.js","components/AppShell.js","api/index.js","components/Header.js","components/ExchangeButton.js","helpers/formatCurrency.js","components/ExchangeRate.js","components/SwapButton.js","pages/Exchange/PocketWrapper.js","pages/Exchange/index.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["value","result","exec","initialState","RATE_FETCH_STARTED","RATE_FETCH_SUCCEEDED","RATE_FETCH_FAILED","getBaseRateObject","createSelector","state","rate","exchange","selectedCurrency","source","getCurrentRate","baseObject","target","pockets","EUR","currency","amount","USD","GBP","currentValue","lastActiveInput","MAX_AMOUNT","CHANGE_AMOUNT","EXCHANGE_CURRENCY","CHANGE_CURRENCY_PAIR","SWAP_CURRENCY_PAIR","getHasLowBalance","sourceCurrency","sourceAmount","parseFloat","getIsExchangeDisabled","hasLowBalance","parsedAmount","isNaN","getPocketCurrencies","Object","keys","getSupportedPockets","filter","pocket","getRealTimeValue","Big","div","toFixed","times","combineReducers","action","type","origin","opposite","validAmount","validateInput","maxAllowedAmount","split","length","oppositeAmount","toString","targetCurrency","targetAmount","minus","add","base","isLoading","hasError","rates","styled","colors","fetchExchangeRate","a","async","fetch","join","response","json","Error","Wrapper","CloseBtn","button","Title","h1","Header","onClose","aria-label","data-testid","onClick","config","browserLocale","navigator","language","Intl","NumberFormat","style","format","ExchangeRate","targetRate","sourceRateFormat","formatCurrency","minimumFractionDigits","targetRateFormat","maximumFractionDigits","props","BalanceWrapper","CurrencySelector","select","Balance","lowBalance","InputWrapper","Sign","span","ExchangeInput","AutosizeInput","connect","realTimeValue","isActive","balance","dispatch","ownProps","onCurrencyChange","changeCurrencyPair","onAmountChange","changeAmount","supportedPockets","onChange","map","key","autoFocus","placeholder","FormWrapper","form","InfoRow","ErrorMessage","Exchange","scheduleRateFetcher","clearFetcherInstance","updateRates","fetcherInstance","setInterval","fetchRate","fetchRateSuccess","fetchRateError","handleVisibilityChange","isVisible","clearInterval","closeSection","alert","submitForm","evt","exchangeCurrency","preventDefault","this","isExchangeDisabled","rateHasError","swapPockets","onSubmit","SwapButton","role","ExchangeButton","disabled","React","Component","pocketCurrencies","rateIsLoading","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","App","Container","AppShell","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78597c73.chunk.js","sourcesContent":["export default value => {\n  const regex = /^[0-9]+\\.?[0-9]{0,2}/;\n  const result = regex.exec(value);\n\n  return result !== null ? result[0] : '';\n};\n","import { createSelector } from 'reselect';\n\nconst initialState = {};\n\n// Actions\n\nexport const RATE_FETCH_STARTED = 'rate/RATE_FETCH_STARTED';\nexport const RATE_FETCH_SUCCEEDED = 'rate/RATE_FETCH_SUCCEEDED';\nexport const RATE_FETCH_FAILED = 'rate/RATE_FETCH_FAILED';\n\n// Action creators\n\nexport function fetchRate(base) {\n  return {\n    type: RATE_FETCH_STARTED,\n    base\n  };\n}\n\nexport function fetchRateSuccess(rates) {\n  return {\n    type: RATE_FETCH_SUCCEEDED,\n    rates\n  };\n}\n\nexport function fetchRateError(base) {\n  return {\n    type: RATE_FETCH_FAILED,\n    base\n  };\n}\n\n// Reducers\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case RATE_FETCH_STARTED: {\n      const { base } = action;\n\n      return {\n        ...state,\n        [base]: {\n          ...state[base],\n          isLoading: true,\n          hasError: false\n        }\n      };\n    }\n\n    case RATE_FETCH_SUCCEEDED: {\n      const { rates } = action;\n\n      return {\n        ...state,\n        [rates.base]: {\n          ...rates.rates,\n          isLoading: false,\n          hasError: false\n        }\n      };\n    }\n\n    case RATE_FETCH_FAILED: {\n      const { base } = action;\n\n      return {\n        ...state,\n        [base]: {\n          ...state[base],\n          isLoading: false,\n          hasError: true\n        }\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n// Selectors\n\nexport const getBaseRateObject = createSelector(\n  state => state.rate,\n  state => state.exchange.selectedCurrency,\n  (rate, { source }) => rate[source] || {}\n);\n\nexport const getCurrentRate = createSelector(\n  getBaseRateObject,\n  state => state.exchange.selectedCurrency,\n  (baseObject, { target }) => baseObject[target]\n);\n","import Big from 'big.js';\nimport { createSelector } from 'reselect';\n\nimport validateInput from 'helpers/validateInput';\nimport { getCurrentRate } from 'redux/modules/rate';\n\nconst initialState = {\n  pockets: {\n    EUR: {\n      currency: 'EUR',\n      amount: '230'\n    },\n    USD: {\n      currency: 'USD',\n      amount: '350'\n    },\n    GBP: {\n      currency: 'GBP',\n      amount: '650'\n    }\n  },\n  selectedCurrency: {\n    source: 'EUR',\n    target: 'GBP'\n  },\n  currentValue: {\n    source: '',\n    target: ''\n  },\n  lastActiveInput: {\n    source: false,\n    target: false\n  }\n};\n\nconst MAX_AMOUNT = 10000000000000 - 1; // 9.99 Trillion\n\n// Actions\n\nexport const CHANGE_AMOUNT = 'exchange/CHANGE_AMOUNT';\nexport const EXCHANGE_CURRENCY = 'exchange/EXCHANGE_CURRENCY';\nexport const CHANGE_CURRENCY_PAIR = 'exchange/CHANGE_CURRENCY_PAIR';\nexport const SWAP_CURRENCY_PAIR = 'exchange/SWAP_CURRENCY_PAIR';\n\n// Action creators\n\nexport function exchangeCurrency() {\n  return {\n    type: EXCHANGE_CURRENCY\n  };\n}\n\nexport function changeAmount(origin, amount, rate) {\n  return {\n    type: CHANGE_AMOUNT,\n    origin,\n    amount,\n    rate\n  };\n}\n\nexport function changeCurrencyPair(origin, currency) {\n  return {\n    type: CHANGE_CURRENCY_PAIR,\n    origin,\n    currency\n  };\n}\n\nexport function swapCurrencyPair() {\n  return {\n    type: SWAP_CURRENCY_PAIR\n  };\n}\n\n// Reducers\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_CURRENCY_PAIR: {\n      const { origin, currency } = action;\n\n      return {\n        ...state,\n        selectedCurrency: {\n          ...state.selectedCurrency,\n          [origin]: currency\n        },\n        currentValue: {\n          source: '',\n          target: ''\n        }\n      };\n    }\n\n    case SWAP_CURRENCY_PAIR: {\n      return {\n        ...state,\n        selectedCurrency: {\n          source: state.selectedCurrency.target,\n          target: state.selectedCurrency.source\n        },\n        currentValue: {\n          source: state.currentValue.target,\n          target: state.currentValue.source\n        },\n        lastActiveInput: {\n          source: state.lastActiveInput.target,\n          target: state.lastActiveInput.source\n        }\n      };\n    }\n\n    case CHANGE_AMOUNT: {\n      const { origin, amount, rate = 1 } = action;\n      const opposite = origin === 'source' ? 'target' : 'source';\n      const validAmount = validateInput(amount);\n      const maxAllowedAmount =\n        origin === 'source' ? MAX_AMOUNT : Big(MAX_AMOUNT).times(rate);\n      const lastActiveInput = {\n        [origin]: true,\n        [opposite]: false\n      };\n\n      if (validAmount === '') {\n        return {\n          ...state,\n          lastActiveInput,\n          currentValue: {\n            source: '',\n            target: ''\n          }\n        };\n      }\n\n      if (parseFloat(validAmount) > maxAllowedAmount) {\n        return state;\n      }\n\n      const parsedAmount =\n        validAmount.split('.').length === 2 ? validAmount : Big(validAmount);\n\n      const oppositeAmount =\n        origin === 'source'\n          ? Big(parsedAmount)\n              .times(rate)\n              .toFixed(2)\n          : Big(parsedAmount)\n              .div(rate)\n              .toFixed(2);\n\n      return {\n        ...state,\n        lastActiveInput,\n        currentValue: {\n          [origin]: parsedAmount.toString(),\n          [opposite]: oppositeAmount.toString()\n        }\n      };\n    }\n\n    case EXCHANGE_CURRENCY: {\n      const sourceCurrency = state.selectedCurrency.source;\n      const sourceAmount = state.currentValue.source;\n\n      const targetCurrency = state.selectedCurrency.target;\n      const targetAmount = state.currentValue.target;\n\n      return {\n        ...state,\n        pockets: {\n          ...state.pockets,\n          [sourceCurrency]: {\n            ...state.pockets[sourceCurrency],\n            amount: Big(state.pockets[sourceCurrency].amount)\n              .minus(sourceAmount)\n              .toString()\n          },\n          [targetCurrency]: {\n            ...state.pockets[targetCurrency],\n            amount: Big(state.pockets[targetCurrency].amount)\n              .add(targetAmount)\n              .toString()\n          }\n        },\n        currentValue: {\n          source: '',\n          target: ''\n        }\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n// Selectors\n\nexport const getHasLowBalance = createSelector(\n  state => state.exchange.selectedCurrency.source,\n  state => state.exchange.currentValue.source,\n  state => state.exchange.pockets,\n  (sourceCurrency, sourceAmount, pockets) =>\n    parseFloat(sourceAmount) > parseFloat(pockets[sourceCurrency].amount)\n);\n\nexport const getIsExchangeDisabled = createSelector(\n  getHasLowBalance,\n  state => state.exchange.currentValue.source,\n  (hasLowBalance, sourceAmount) => {\n    const parsedAmount = parseFloat(sourceAmount);\n\n    return isNaN(parsedAmount) || parsedAmount === 0 || hasLowBalance;\n  }\n);\n\nexport const getPocketCurrencies = createSelector(\n  state => state.exchange.pockets,\n  (pockets = {}) => Object.keys(pockets)\n);\n\nexport const getSupportedPockets = createSelector(\n  getPocketCurrencies,\n  state => state.exchange.selectedCurrency,\n  (pockets, { source, target }) => ({\n    source: pockets.filter(pocket => pocket !== target),\n    target: pockets.filter(pocket => pocket !== source)\n  })\n);\n\nexport const getRealTimeValue = createSelector(\n  getCurrentRate,\n  state => state.exchange.currentValue,\n  (rate = 1, { source, target }) => {\n    const parsedAmount = parseFloat(source);\n\n    if (isNaN(parsedAmount) || parsedAmount === 0) {\n      return {\n        source: '',\n        target: ''\n      };\n    }\n\n    return {\n      source: Big(target)\n        .div(rate)\n        .toFixed(2),\n      target: Big(source)\n        .times(rate)\n        .toFixed(2)\n    };\n  }\n);\n","import { combineReducers } from 'redux';\n\nimport exchange from './exchange';\nimport rate from './rate';\n\nexport default combineReducers({\n  exchange,\n  rate\n});\n","import styled from '@emotion/styled';\n\nexport default styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n","export default {\n  gray: '#f3f4f5',\n  lightGray: '#475b6b',\n  blue: '#0056b2',\n  pink: '#eb008d'\n};\n","import styled from '@emotion/styled';\n\nimport colors from 'colors';\n\nexport default styled.div`\n  max-width: 550px;\n  width: 100%;\n  height: 660px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${colors.gray};\n  border-radius: 16px;\n  background-color: ${colors.gray};\n  overflow: hidden;\n`;\n","const API_URL = 'https://api.exchangeratesapi.io/latest';\n\nexport const fetchExchangeRate = async (source, pockets) => {\n  try {\n    const response = await fetch(\n      `${API_URL}?base=${source}&symbols=${pockets.join(',')}`\n    );\n\n    return response.json();\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 12px;\n  background-color: #fff;\n`;\n\nconst CloseBtn = styled.button`\n  border: 0;\n  background-color: transparent;\n  font-size: 28px;\n  cursor: pointer;\n`;\n\nconst Title = styled.h1`\n  font-size: 22px;\n  font-weight: 400;\n  margin-left: 10px;\n`;\n\nconst Header = ({ onClose }) => (\n  <Wrapper>\n    <CloseBtn\n      aria-label=\"Close currency exchange section\"\n      data-testid=\"close-button\"\n      onClick={onClose}\n    >\n      &times;\n    </CloseBtn>\n    <Title>Exchange</Title>\n  </Wrapper>\n);\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nimport colors from 'colors';\n\nexport default styled.button`\n  background-color: ${colors.pink};\n  color: #fff;\n  font-size: 14px;\n  padding: 12px;\n  width: calc(100% - 36px);\n  margin: 0 18px 20px;\n  border: 0;\n  border-radius: 22px;\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n  box-shadow: 0px 4px 8px 2px #eb008d52;\n  transition: background-color 250ms ease-in-out;\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n\n    &:hover {\n      background-color: ${colors.pink};\n    }\n  }\n  &:hover {\n    background-color: #cc097e;\n  }\n`;\n","export default (config = {}) => {\n  const browserLocale = navigator.language;\n\n  return Intl.NumberFormat(browserLocale, { style: 'currency', ...config })\n    .format;\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport colors from 'colors';\nimport formatCurrency from 'helpers/formatCurrency';\n\nconst Wrapper = styled.div`\n  color: ${colors.blue};\n  background-color: #fff;\n  border: 2px solid ${colors.gray};\n  padding: 4px 16px;\n  border-radius: 12px;\n  font-size: 14px;\n`;\n\nconst ExchangeRate = ({ selectedCurrency, targetRate }) => {\n  const sourceRateFormat = formatCurrency({\n    currency: selectedCurrency.source,\n    minimumFractionDigits: 0\n  });\n  const targetRateFormat = formatCurrency({\n    currency: selectedCurrency.target,\n    maximumFractionDigits: 4\n  });\n\n  return (\n    <Wrapper data-testid=\"exchange-rate\">\n      <span data-testid=\"source-currency-rate\">{sourceRateFormat(1)}</span>\n      {' = '}\n      <span data-testid=\"current-rate\">\n        {targetRate ? targetRateFormat(targetRate) : '...'}\n      </span>\n    </Wrapper>\n  );\n};\n\nExchangeRate.propTypes = {\n  selectedCurrency: PropTypes.shape({\n    source: PropTypes.string.isRequired,\n    target: PropTypes.string.isRequired\n  }).isRequired,\n  targetRate: PropTypes.number\n};\n\nexport default ExchangeRate;\n","import styled from '@emotion/styled';\n\nimport colors from 'colors';\n\nexport default styled.button`\n  width: 32px;\n  height: 32px;\n  background-color: #fff;\n  border: 2px solid ${colors.gray};\n  font-size: 14px;\n  border-radius: 100%;\n  color: ${colors.blue};\n  text-align: center;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { connect } from 'react-redux';\nimport AutosizeInput from 'react-input-autosize';\nimport PropTypes from 'prop-types';\n\nimport {\n  changeCurrencyPair,\n  changeAmount,\n  getHasLowBalance,\n  getRealTimeValue\n} from 'redux/modules/exchange';\nimport { getCurrentRate } from 'redux/modules/rate';\n\nimport colors from 'colors';\nimport formatCurrency from 'helpers/formatCurrency';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 12px;\n  background-color: ${props =>\n    ({\n      source: '#fff',\n      target: colors.gray\n    }[props.origin])};\n  height: 120px;\n`;\n\nconst BalanceWrapper = styled.div`\n  min-width: 130px;\n`;\n\nconst CurrencySelector = styled.select`\n  background-color: transparent;\n  border: 0;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\nconst Balance = styled.div`\n  color: ${props => (props.lowBalance ? 'red' : colors.lightGray)};\n  font-size: 14px;\n  padding-top: 8px;\n  padding-left: 8px;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Sign = styled.span`\n  font-size: 28px;\n  vertical-align: top;\n`;\n\nconst ExchangeInput = styled(AutosizeInput)`\n  & input {\n    border: 0;\n    font-size: 28px;\n    text-align: right;\n    background-color: transparent;\n\n    &::placeholder {\n      color: #8b959e;\n    }\n  }\n`;\n\nconst PocketWrapper = ({\n  origin,\n  currency,\n  balance,\n  amount,\n  rate,\n  isActive,\n  realTimeValue,\n  lowBalance,\n  supportedPockets,\n  onCurrencyChange,\n  onAmountChange\n}) => (\n  <Wrapper origin={origin}>\n    <BalanceWrapper>\n      <CurrencySelector\n        data-testid={`${origin}-currency-selector`}\n        value={currency}\n        aria-label={\n          origin === 'source'\n            ? 'Select source currency'\n            : 'Select target currency'\n        }\n        onChange={({ target }) => onCurrencyChange(target.value)}\n      >\n        {supportedPockets.map(pocket => (\n          <option key={pocket}>{pocket}</option>\n        ))}\n      </CurrencySelector>\n      <Balance\n        data-testid={`${origin}-balance`}\n        lowBalance={origin === 'source' && lowBalance}\n      >\n        Balance: {formatCurrency({ currency })(balance)}\n      </Balance>\n    </BalanceWrapper>\n    <InputWrapper>\n      {parseFloat(amount) > 0 && <Sign>{origin === 'source' ? '-' : '+'}</Sign>}\n      <ExchangeInput\n        data-testid={`${origin}-input`}\n        type=\"text\"\n        autoFocus={origin === 'source'}\n        aria-label={\n          origin === 'source' ? 'Enter source amount' : 'Enter target amount'\n        }\n        placeholder=\"0\"\n        value={isActive ? amount : realTimeValue}\n        onChange={({ target }) => onAmountChange(target.value, rate)}\n      />\n    </InputWrapper>\n  </Wrapper>\n);\n\nPocketWrapper.propTypes = {\n  origin: PropTypes.oneOf(['source', 'target']).isRequired,\n  currency: PropTypes.string.isRequired,\n  balance: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  rate: PropTypes.number,\n  isActive: PropTypes.bool.isRequired,\n  realTimeValue: PropTypes.string.isRequired,\n  lowBalance: PropTypes.bool.isRequired,\n  supportedPockets: PropTypes.array.isRequired,\n  onCurrencyChange: PropTypes.func.isRequired,\n  onAmountChange: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ exchange, rate }, { origin }) => {\n  const currency = exchange.selectedCurrency[origin];\n\n  return {\n    currency,\n    realTimeValue: getRealTimeValue({ exchange, rate })[origin],\n    isActive: exchange.lastActiveInput[origin],\n    balance: exchange.pockets[currency].amount,\n    amount: exchange.currentValue[origin],\n    lowBalance: getHasLowBalance({ exchange }),\n    rate: getCurrentRate({ exchange, rate })\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onCurrencyChange: currency => {\n    dispatch(changeCurrencyPair(ownProps.origin, currency));\n  },\n  onAmountChange: (amount, rate) => {\n    dispatch(changeAmount(ownProps.origin, amount, rate));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PocketWrapper);\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PageVisibility from 'react-page-visibility';\n\nimport {\n  exchangeCurrency,\n  swapCurrencyPair,\n  getPocketCurrencies,\n  getIsExchangeDisabled,\n  getSupportedPockets\n} from 'redux/modules/exchange';\nimport {\n  fetchRate,\n  fetchRateSuccess,\n  fetchRateError,\n  getCurrentRate,\n  getBaseRateObject\n} from 'redux/modules/rate';\nimport { fetchExchangeRate } from 'api';\n\nimport Header from 'components/Header';\nimport ExchangeButton from 'components/ExchangeButton';\nimport ExchangeRate from 'components/ExchangeRate';\nimport SwapButton from 'components/SwapButton';\n\nimport PocketWrapper from './PocketWrapper';\n\nconst FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n`;\n\nconst InfoRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: -16px;\n  padding: 0 12px;\n`;\n\nconst ErrorMessage = styled.div`\n  padding: 12px;\n  background-color: #000;\n  color: #fff;\n  margin: 0 18px 20px;\n  border-radius: 4px;\n  text-align: center;\n`;\n\nclass Exchange extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scheduleRateFetcher(this.props.selectedCurrency.source);\n  }\n\n  componentDidUpdate({ selectedCurrency }) {\n    const shouldFetch =\n      selectedCurrency.source !== this.props.selectedCurrency.source;\n\n    if (shouldFetch) {\n      this.scheduleRateFetcher(this.props.selectedCurrency.source);\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearFetcherInstance();\n  }\n\n  scheduleRateFetcher = source => {\n    const pockets = this.props.supportedPockets.target;\n\n    // Clear interval instance if already there\n    this.clearFetcherInstance();\n\n    this.updateRates(source, pockets);\n    this.fetcherInstance = setInterval(\n      () => this.updateRates(source, pockets),\n      10000\n    );\n  };\n\n  updateRates = async (source, pockets) => {\n    this.props.fetchRate(source);\n\n    try {\n      const rates = await fetchExchangeRate(source, pockets);\n\n      this.props.fetchRateSuccess(rates);\n    } catch (e) {\n      this.props.fetchRateError(source);\n    }\n  };\n\n  handleVisibilityChange = isVisible => {\n    if (isVisible) {\n      this.scheduleRateFetcher(this.props.selectedCurrency.source);\n    } else {\n      this.clearFetcherInstance();\n    }\n  };\n\n  clearFetcherInstance = () => {\n    if (!this.fetcherInstance) {\n      return;\n    }\n\n    clearInterval(this.fetcherInstance);\n    this.fetcherInstance = null;\n  };\n\n  closeSection = () => {\n    alert('Closing section');\n  };\n\n  submitForm = evt => {\n    this.props.exchangeCurrency();\n    evt.preventDefault();\n  };\n\n  render() {\n    const {\n      selectedCurrency,\n      targetRate,\n      isExchangeDisabled,\n      rateHasError,\n      supportedPockets,\n      swapPockets\n    } = this.props;\n\n    return (\n      <PageVisibility onChange={this.handleVisibilityChange}>\n        <>\n          <Header onClose={this.closeSection} />\n          <FormWrapper onSubmit={this.submitForm}>\n            <div>\n              <PocketWrapper\n                origin=\"source\"\n                supportedPockets={supportedPockets.source}\n              />\n\n              <InfoRow>\n                <SwapButton\n                  type=\"button\"\n                  data-testid=\"swap-button\"\n                  aria-label=\"Swap source and target currencies\"\n                  onClick={swapPockets}\n                >\n                  &#8645;\n                </SwapButton>\n                <ExchangeRate\n                  selectedCurrency={selectedCurrency}\n                  targetRate={targetRate}\n                />\n                <div />\n              </InfoRow>\n\n              <PocketWrapper\n                origin=\"target\"\n                supportedPockets={supportedPockets.target}\n              />\n            </div>\n            {rateHasError && (\n              <ErrorMessage role=\"alert\" data-testid=\"error-message\">\n                Fetching exchange rates failed\n              </ErrorMessage>\n            )}\n            {!rateHasError && (\n              <ExchangeButton\n                type=\"submit\"\n                data-testid=\"exchange-button\"\n                disabled={isExchangeDisabled}\n              >\n                Exchange\n              </ExchangeButton>\n            )}\n          </FormWrapper>\n        </>\n      </PageVisibility>\n    );\n  }\n}\n\nExchange.propTypes = {\n  pocketCurrencies: PropTypes.array.isRequired,\n  targetRate: PropTypes.number,\n  selectedCurrency: PropTypes.shape({\n    source: PropTypes.string.isRequired,\n    target: PropTypes.string.isRequired\n  }).isRequired,\n  supportedPockets: PropTypes.shape({\n    source: PropTypes.array.isRequired,\n    target: PropTypes.array.isRequired\n  }).isRequired,\n  isExchangeDisabled: PropTypes.bool.isRequired,\n  exchangeCurrency: PropTypes.func.isRequired,\n  swapPockets: PropTypes.func.isRequired,\n  fetchRate: PropTypes.func.isRequired,\n  fetchRateSuccess: PropTypes.func.isRequired,\n  fetchRateError: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  pocketCurrencies: getPocketCurrencies(state),\n  targetRate: getCurrentRate(state),\n  supportedPockets: getSupportedPockets(state),\n  selectedCurrency: state.exchange.selectedCurrency,\n  isExchangeDisabled: getIsExchangeDisabled(state),\n  rateIsLoading: getBaseRateObject(state)['isLoading'],\n  rateHasError: getBaseRateObject(state)['hasError']\n});\n\nconst mapDispatchToProps = dispatch => ({\n  exchangeCurrency: () => {\n    dispatch(exchangeCurrency());\n  },\n  swapPockets: () => {\n    dispatch(swapCurrencyPair());\n  },\n  fetchRate: source => {\n    dispatch(fetchRate(source));\n  },\n  fetchRateSuccess: rates => {\n    dispatch(fetchRateSuccess(rates));\n  },\n  fetchRateError: source => {\n    dispatch(fetchRateError(source));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exchange);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport 'normalize.css';\nimport 'index.css';\n\nimport configureStore from 'redux/configureStore';\n\nimport Container from 'components/Container';\nimport AppShell from 'components/AppShell';\nimport Exchange from 'pages/Exchange';\n\nconst store = configureStore({});\n\nconst App = () => (\n  <Provider store={store}>\n    <Container>\n      <AppShell>\n        <Exchange />\n      </AppShell>\n    </Container>\n  </Provider>\n);\n\nexport default App;\n","import { createStore } from 'redux';\n\nimport rootReducer from './modules';\n\nexport default (initialState = {}) =>\n  createStore(\n    rootReducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}